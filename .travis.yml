language: go

go:
  - 1.9
  - master 

install: true

services:
  - docker

# Test different VPS platforms we want to support
env:
  - VPS_OS=ubuntu VERSION=16.04
  - VPS_OS=ubuntu VERSION=14.04
  - VPS_OS=ubuntu VERSION=latest

matrix:
  # It's ok if our code fails on unstable development versions of Go
  # and/or VPS platforms
  allow_failures:
    - go: master
    - env: VPS_OS=ubuntu VERSION=latest
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

# Don't email me the results of the test runs.
notifications:
  email: false

# before_script fails fast (set -e).
before_script:
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
  - go get honnef.co/go/tools/cmd/megacheck                     # Static analysis
  - go get github.com/fzipp/gocyclo                             # Look for complexity
  - go get github.com/mattn/goveralls
  - go get -u github.com/golang/dep/cmd/dep
  - dep ensure
  - if [ "$VPS_OS" = "ubuntu" ]; then make testenv-ubuntu VERSION="$VERSION" SSH_PORT=69; fi

# script always run to completion (set +e).
script:
  - go test -v -race -cover ./...            # Run all the tests with the race detector enabled
  - go vet ./...
  - megacheck ./...
  - gocyclo -over 19 $GO_FILES               # forbid code with huge functions
  - goveralls -service=travis-ci
